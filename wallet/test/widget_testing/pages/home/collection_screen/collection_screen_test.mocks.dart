// Mocks generated by Mockito 5.3.2 from annotations
// in pylons_wallet/test/widget_testing/pages/home/collection_screen/collection_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pylons_wallet/model/nft.dart' as _i5;
import 'package:pylons_wallet/pages/home/collection_screen/collection_screen.dart'
    as _i6;
import 'package:pylons_wallet/pages/home/collection_screen/collection_view_model.dart'
    as _i4;
import 'package:pylons_wallet/services/third_party_services/thumbnail_helper.dart'
    as _i3;
import 'package:pylons_wallet/stores/wallet_store.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletsStore_0 extends _i1.SmartFake implements _i2.WalletsStore {
  _FakeWalletsStore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThumbnailHelper_1 extends _i1.SmartFake
    implements _i3.ThumbnailHelper {
  _FakeThumbnailHelper_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CollectionViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCollectionViewModel extends _i1.Mock
    implements _i4.CollectionViewModel {
  MockCollectionViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.WalletsStore get walletsStore => (super.noSuchMethod(
        Invocation.getter(#walletsStore),
        returnValue: _FakeWalletsStore_0(
          this,
          Invocation.getter(#walletsStore),
        ),
      ) as _i2.WalletsStore);
  @override
  set walletsStore(_i2.WalletsStore? _walletsStore) => super.noSuchMethod(
        Invocation.setter(
          #walletsStore,
          _walletsStore,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.ThumbnailHelper get thumbnailHelper => (super.noSuchMethod(
        Invocation.getter(#thumbnailHelper),
        returnValue: _FakeThumbnailHelper_1(
          this,
          Invocation.getter(#thumbnailHelper),
        ),
      ) as _i3.ThumbnailHelper);
  @override
  set thumbnailHelper(_i3.ThumbnailHelper? _thumbnailHelper) =>
      super.noSuchMethod(
        Invocation.setter(
          #thumbnailHelper,
          _thumbnailHelper,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.NFT> get assets => (super.noSuchMethod(
        Invocation.getter(#assets),
        returnValue: <_i5.NFT>[],
      ) as List<_i5.NFT>);
  @override
  set assets(List<_i5.NFT>? _assets) => super.noSuchMethod(
        Invocation.setter(
          #assets,
          _assets,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.NFT> get recipes => (super.noSuchMethod(
        Invocation.getter(#recipes),
        returnValue: <_i5.NFT>[],
      ) as List<_i5.NFT>);
  @override
  set recipes(List<_i5.NFT>? _recipes) => super.noSuchMethod(
        Invocation.setter(
          #recipes,
          _recipes,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.NFT> get creations => (super.noSuchMethod(
        Invocation.getter(#creations),
        returnValue: <_i5.NFT>[],
      ) as List<_i5.NFT>);
  @override
  set creations(List<_i5.NFT>? _creations) => super.noSuchMethod(
        Invocation.setter(
          #creations,
          _creations,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.NFT> get purchases => (super.noSuchMethod(
        Invocation.getter(#purchases),
        returnValue: <_i5.NFT>[],
      ) as List<_i5.NFT>);
  @override
  set purchases(List<_i5.NFT>? _purchases) => super.noSuchMethod(
        Invocation.setter(
          #purchases,
          _purchases,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i5.NFT> get favorites => (super.noSuchMethod(
        Invocation.getter(#favorites),
        returnValue: <_i5.NFT>[],
      ) as List<_i5.NFT>);
  @override
  set favorites(List<_i5.NFT>? _favorites) => super.noSuchMethod(
        Invocation.setter(
          #favorites,
          _favorites,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get thumbnailsPath => (super.noSuchMethod(
        Invocation.getter(#thumbnailsPath),
        returnValue: '',
      ) as String);
  @override
  set thumbnailsPath(String? _thumbnailsPath) => super.noSuchMethod(
        Invocation.setter(
          #thumbnailsPath,
          _thumbnailsPath,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.Collection> get collectionType => (super.noSuchMethod(
        Invocation.getter(#collectionType),
        returnValue: <_i6.Collection>[],
      ) as List<_i6.Collection>);
  @override
  set collectionType(List<_i6.Collection>? _collectionType) =>
      super.noSuchMethod(
        Invocation.setter(
          #collectionType,
          _collectionType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.CollectionsType get collectionsType => (super.noSuchMethod(
        Invocation.getter(#collectionsType),
        returnValue: _i4.CollectionsType.purchases,
      ) as _i4.CollectionsType);
  @override
  set collectionsType(_i4.CollectionsType? value) => super.noSuchMethod(
        Invocation.setter(
          #collectionsType,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set colType(String? value) => super.noSuchMethod(
        Invocation.setter(
          #colType,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get colType => (super.noSuchMethod(
        Invocation.getter(#colType),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<dynamic> loadPurchasesAndCreationsData() => (super.noSuchMethod(
        Invocation.method(
          #loadPurchasesAndCreationsData,
          [],
        ),
        returnValue: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);
  @override
  void refreshScreen() => super.noSuchMethod(
        Invocation.method(
          #refreshScreen,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThumbnailHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockThumbnailHelper extends _i1.Mock implements _i3.ThumbnailHelper {
  MockThumbnailHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String ifThumbnailAlreadyExists(
    String? nftName,
    String? thumbnailsPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #ifThumbnailAlreadyExists,
          [
            nftName,
            thumbnailsPath,
          ],
        ),
        returnValue: '',
      ) as String);
  @override
  _i7.Future<String?> generateVideoThumbnailIfRequired(
    String? nftUrl,
    String? nftName,
    String? thumbnailsPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateVideoThumbnailIfRequired,
          [
            nftUrl,
            nftName,
            thumbnailsPath,
          ],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);
}
